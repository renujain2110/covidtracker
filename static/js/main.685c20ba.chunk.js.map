{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","app.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/covid19.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","seperator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","modifiedData","console","log","fetchDailyData","fetchCountries","countries","c","map","x","name","Chart","useState","dailyData","setDailyData","useEffect","fetchAPI","lineChart","labels","reportDate","datasets","total","label","borderColor","fill","BarChart","backgroundColor","options","legend","display","title","text","CountryPicker","handleCountryChange","setcountries","fetchCountryValues","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","countrySpecificData","setState","fetchedData","this","image","src","coronaImage","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.685c20ba.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__1qjVc\",\"card\":\"Cards_card__2fb-8\",\"infected\":\"Cards_infected__I9dKv\",\"recovered\":\"Cards_recovered__nAvYg\",\"deaths\":\"Cards_deaths__2SB_f\"};","import React from 'react';\r\nimport {Card, Typography, Grid, CardContent} from '@material-ui/core';\r\nimport styles from './Cards.module.css';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nconst Cards = ({data :{confirmed, recovered, deaths, lastUpdate}}) =>{\r\n    if(!confirmed){\r\n        return 'Loading...';\r\n    }\r\n    return(\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp\r\n                                start={0}\r\n                                end={confirmed.value}\r\n                                duration={1.5}\r\n                                seperator=\",\"\r\n                            />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">No of active cases of covid 19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp\r\n                                start={0}\r\n                                end={recovered.value}\r\n                                duration={1.5}\r\n                                seperator=\",\"\r\n                            />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">No of recovered patients from covid 19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp\r\n                                start={0}\r\n                                end={deaths.value}\r\n                                duration={1.5}\r\n                                seperator=\",\"\r\n                            />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">No of deaths from covid 19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\nexport default Cards;","import axios from 'axios' \r\n\r\nconst url = \"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData = async (country) =>{\r\n    try{\r\n        let changeableUrl = url;\r\n        if(country){\r\n            changeableUrl = `${url}/countries/${country}`\r\n        }\r\n\r\n        const { data : {confirmed, deaths, recovered, lastUpdate} } = await axios.get(changeableUrl);\r\n\r\n        const modifiedData ={\r\n            confirmed,\r\n            deaths,\r\n            recovered,\r\n            lastUpdate\r\n\r\n        }\r\n        return modifiedData;\r\n    }\r\n    catch(error){\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const fetchDailyData =  async() => {\r\n    try {\r\n        // console.log(`${url}/daily`);\r\n        const {data} = await axios.get(`${url}/daily`);\r\n        //console.log(data);\r\n        return data;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\n\r\nexport const fetchCountries = async() =>{\r\n    try{\r\n        const {data : {countries}} = await axios.get(`${url}/countries`);\r\n        const c = countries.map((x) => x.name);\r\n        return c;\r\n    }\r\n    catch(error){\r\n        console.log(error);\r\n    }\r\n}","import React, {useState, useEffect} from 'react';\r\nimport {fetchDailyData} from '../../api';\r\nimport {Line, Bar} from 'react-chartjs-2';\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({data : {confirmed, recovered, deaths}, country}) =>{\r\n    const [dailyData, setDailyData] = useState([]);\r\n\r\n    useEffect(() => {\r\n    const fetchAPI = async() => {\r\n        setDailyData(await fetchDailyData());\r\n    }\r\n    fetchAPI();\r\n    },[]);\r\n\r\n    // console.log(dailyData[0]);\r\n    const lineChart = (\r\n        dailyData[0] ? \r\n        (<Line data = {\r\n            {\r\n               labels : dailyData.map(({reportDate})=>reportDate),\r\n               datasets : [{\r\n                   data : dailyData.map(({confirmed})=>confirmed.total),\r\n                   label : 'Infected',\r\n                   borderColor : '#3333ff',\r\n                   fill : true\r\n               },{\r\n                data : dailyData.map(({deaths})=>deaths.total),\r\n                label : 'Deaths',\r\n                borderColor : 'red',\r\n                fill : true\r\n               }]    \r\n            }\r\n        }\r\n        />)\r\n        :null\r\n    );\r\n    const BarChart = (\r\n        confirmed \r\n        ? (<Bar\r\n            data={{\r\n                labels:['Infected','Recovered','Deaths'],\r\n                datasets:[{\r\n                    label : 'People',\r\n                    backgroundColor : [\r\n                        'rgba(0,0,255,0.5)',\r\n                        'rgba(0,255,0,0.5)',\r\n                        'rgba(255,0,0,0.5)',\r\n                ],\r\n                data : [confirmed.value,recovered.value,deaths.value]\r\n            }]\r\n            }}\r\n            \r\n            options={{\r\n                legend : {display : false},\r\n                title:{display:true, text:`Current state in ${country}`},\r\n            }}\r\n            />) \r\n        : null\r\n    )\r\n    \r\n    return(\r\n        <div className={styles.container}>\r\n            {country ? BarChart : lineChart}\r\n        </div>\r\n    )\r\n}\r\nexport default Chart;","import React, {useState, useEffect} from 'react';\r\nimport {NativeSelect, FormControl} from '@material-ui/core';\r\nimport styles from './CountryPicker.module.css';\r\nimport {fetchCountries} from '../../api';\r\n\r\nconst CountryPicker = ({handleCountryChange}) =>{\r\n\r\n    const[countries, setcountries] = useState([]);\r\n    useEffect(() =>{\r\n        const fetchCountryValues = async() =>\r\n        {\r\n            setcountries(await fetchCountries());\r\n        }\r\n        fetchCountryValues();\r\n    },[setcountries]);\r\n\r\n    return(\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n                <option value=\"\">Global</option>\r\n                {countries.map((country, i) => <option key={i} value={country}>{country}</option>) }\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\nexport default CountryPicker;","import React from 'react';\r\nimport Cards from './components/Cards/Cards';\r\nimport Chart from './components/Chart/Chart';\r\nimport CountryPicker from './components/CountryPicker/CountryPicker';\r\nimport styles from './App.module.css';\r\nimport {fetchData} from './api'\r\nimport coronaImage from './images/covid19.png';\r\n\r\nclass App extends React.Component {\r\n\r\n    state = {\r\n        data : {},\r\n        country : ''\r\n    }\r\n\r\n    handleCountryChange = async (country) =>{\r\n        const countrySpecificData = await fetchData(country);\r\n        this.setState({data : countrySpecificData, country : country});\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const fetchedData = await fetchData();\r\n        this.setState({data : fetchedData});\r\n    }\r\n\r\n    render() {\r\n        const {data, country} = this.state;\r\n        return (\r\n            <div className={styles.container}>\r\n                <img className={styles.image} src={coronaImage} alt=\"COVID-19\"/>\r\n                <Cards data={data}/>\r\n                <CountryPicker handleCountryChange={this.handleCountryChange}/>\r\n                <Chart data={data} country={country}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './app';\r\n\r\nReactDOM.render(<App/>,document.getElementById('root'));\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2h5Iy\",\"image\":\"App_image__2Y9uz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1v084\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__3iJln\"};","module.exports = __webpack_public_path__ + \"static/media/covid19.d7265326.png\";"],"sourceRoot":""}